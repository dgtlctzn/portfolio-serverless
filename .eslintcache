[{"/Users/admin/gt-ft/react-apps/portfolio-serverless/src/index.js":"1","/Users/admin/gt-ft/react-apps/portfolio-serverless/src/App.js":"2","/Users/admin/gt-ft/react-apps/portfolio-serverless/src/reportWebVitals.js":"3","/Users/admin/gt-ft/react-apps/portfolio-serverless/src/containers/Home/Home.jsx":"4","/Users/admin/gt-ft/react-apps/portfolio-serverless/src/components/Nav/Nav.jsx":"5","/Users/admin/gt-ft/react-apps/portfolio-serverless/src/components/Tech/Tech.jsx":"6","/Users/admin/gt-ft/react-apps/portfolio-serverless/src/components/About/About.jsx":"7","/Users/admin/gt-ft/react-apps/portfolio-serverless/src/components/IconLink/IconLink.jsx":"8","/Users/admin/gt-ft/react-apps/portfolio-serverless/src/components/ProjectCard/ProjectCard.jsx":"9"},{"size":559,"mtime":1607439302569,"results":"10","hashOfConfig":"11"},{"size":206,"mtime":1607439286361,"results":"12","hashOfConfig":"11"},{"size":362,"mtime":1607438966482,"results":"13","hashOfConfig":"11"},{"size":5459,"mtime":1611591223099,"results":"14","hashOfConfig":"11"},{"size":796,"mtime":1607439193875,"results":"15","hashOfConfig":"11"},{"size":274,"mtime":1611591223098,"results":"16","hashOfConfig":"11"},{"size":1052,"mtime":1611591223098,"results":"17","hashOfConfig":"11"},{"size":328,"mtime":1607439193873,"results":"18","hashOfConfig":"11"},{"size":1375,"mtime":1611591223098,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"t5u1lt",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"22"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"/Users/admin/gt-ft/react-apps/portfolio-serverless/src/index.js",[],["41","42"],"/Users/admin/gt-ft/react-apps/portfolio-serverless/src/App.js",[],"/Users/admin/gt-ft/react-apps/portfolio-serverless/src/reportWebVitals.js",[],"/Users/admin/gt-ft/react-apps/portfolio-serverless/src/containers/Home/Home.jsx",["43","44","45"],"import React, { useState, useEffect, lazy, Suspense } from \"react\";\nimport \"./Home.css\";\nimport About from \"../../components/About/About\";\nimport Tech from \"../../components/Tech/Tech\";\nimport ProjectCard from \"../../components/ProjectCard/ProjectCard\";\nimport IconLink from \"../../components/IconLink/IconLink\";\nimport projects from \"../../json/projects.json\";\nimport technologies from \"../../json/technologies.json\";\nimport contacts from \"../../json/contacts.json\";\nimport { Modal, Button } from \"react-materialize\";\nimport M from \"materialize-css\";\n\n// const About = lazy(() => import(\"../../components/About/About\"));\n// const Tech = lazy(() => import(\"../../components/Tech/Tech\"));\n// const ProjectCard = lazy(() =>\n//   import(\"../../components/ProjectCard/ProjectCard\")\n// );\n\nconst Home = () => {\n  const [about, setAbout] = useState(false);\n  const aboutComponent = about ? <About /> : <div id=\"about-blank\"></div>;\n\n  const [tech, setTech] = useState(false);\n  const techComponent = tech ? (\n    <>\n      {technologies.map((tech) => (\n        <Tech key={tech.id} {...tech} />\n      ))}\n    </>\n  ) : (\n    <div id=\"tech-blank\"></div>\n  );\n\n  const [project, setProject] = useState(false);\n  const projectComponent = project ? (\n    <>\n      {projects.map((project) => (\n        <ProjectCard key={project.id} {...project} />\n      ))}\n    </>\n  ) : (\n    <div id=\"project-blank\"></div>\n  );\n\n  useEffect(() => {\n    var elems = document.querySelectorAll(\".parallax\");\n\n    M.Parallax.init(elems);\n  }, []);\n\n  const lazyAbout = (entries) => {\n    entries.forEach((entry) => {\n      if (!about) {\n        if (entry.isIntersecting) {\n          setAbout(true);\n        }\n      }\n    });\n  };\n\n  const lazyTech = (entries) => {\n    entries.forEach((entry) => {\n      if (!tech) {\n        if (entry.isIntersecting) {\n          setTech(true);\n        }\n      }\n    });\n  };\n\n  const lazyProject = (entries) => {\n    entries.forEach((entry) => {\n      if (!project) {\n        if (entry.isIntersecting) {\n          setProject(true);\n        }\n      }\n    });\n  };\n\n  useEffect(() => {\n    let options = {\n      rootMargin: \"400px\",\n      threshold: 1.0,\n    };\n    let optionsTwo = {\n      rootMargin: \"40px\",\n      threshold: 1.0,\n    };\n    let optionsThree = {\n      rootMargin: \"0px\",\n      threshold: 1.0,\n    };\n    const aboutObserver = new IntersectionObserver(lazyAbout, options);\n    const techObserver = new IntersectionObserver(lazyTech, optionsTwo);\n    const projectObserver = new IntersectionObserver(lazyProject, optionsThree);\n\n    let aboutTarget = document.querySelector(\"#about\");\n    let techTarget = document.querySelector(\"#tech\");\n    let projectTarget = document.querySelector(\"#projects\");\n\n    aboutObserver.observe(aboutTarget);\n    techObserver.observe(techTarget);\n    projectObserver.observe(projectTarget);\n  }, []);\n\n  return (\n    <div>\n      <div className=\"parallax-container\">\n        <div className=\"parallax\">\n          <img id=\"background\" src=\"./img/Full-stack-development.png\" />\n        </div>\n      </div>\n      <div id=\"about\" className=\"row section-dark\">\n        <div id=\"about-me\" className=\"col s12 offset-m1\">\n          <h3>About Me</h3>\n          <div id=\"break\"></div>\n          <Suspense fallback={null}>{aboutComponent}</Suspense>\n        </div>\n      </div>\n      <div id=\"tech\" className=\"row section-light\">\n        <div className=\"col offset-m1\">\n          <h3>Technical Skills</h3>\n          <div id=\"break-two\"></div>\n          <div className=\"row\">\n            <Suspense fallback={null}>{techComponent}</Suspense>\n          </div>\n        </div>\n      </div>\n      <div className=\"row section-dark\">\n        <h3 id=\"projects\">\n          Projects\n        </h3>\n        <div id=\"break\"></div>\n        <Suspense fallback={null}>{projectComponent}</Suspense>\n      </div>\n      {/* <div className=\"parallax-container\">\n        <div className=\"parallax\">\n          <img src=\"./img/IMG_3503.jpeg\" />\n        </div>\n      </div> */}\n      <div id=\"contact\" className=\"row contact\">\n        <div className=\"col offset-m1\"></div>\n        {/* <div id=\"contacts\" className=\"col m12\"> */}\n          {contacts.map((contact) => (\n            <IconLink key={contact.alt} {...contact} />\n          ))}\n          <div className=\"col s12 m2\">\n            <h5 className=\"logo-name\">Phone</h5>\n            <Modal\n              actions={[\n                <Button flat modal=\"close\" node=\"button\" waves=\"green\">\n                  Close\n                </Button>,\n              ]}\n              bottomSheet={false}\n              fixedFooter={false}\n              header=\"Cell Number\"\n              id=\"Modal-0\"\n              open={false}\n              options={{\n                dismissible: true,\n                endingTop: \"10%\",\n                inDuration: 250,\n                onCloseEnd: null,\n                onCloseStart: null,\n                onOpenEnd: null,\n                onOpenStart: null,\n                opacity: 0.5,\n                outDuration: 250,\n                preventScrolling: true,\n                startingTop: \"4%\",\n              }}\n              trigger={\n                <img\n                  className=\"icon-logo\"\n                  src=\"./img/phone-logo.png\"\n                  alt=\"phone\"\n                />\n              }\n            >\n              <p>(404) 358-3607</p>\n            </Modal>\n          </div>\n        </div>\n      {/* </div> */}\n    </div>\n  );\n};\n\nexport default Home;\n","/Users/admin/gt-ft/react-apps/portfolio-serverless/src/components/Nav/Nav.jsx",[],"/Users/admin/gt-ft/react-apps/portfolio-serverless/src/components/Tech/Tech.jsx",[],"/Users/admin/gt-ft/react-apps/portfolio-serverless/src/components/About/About.jsx",[],["46","47"],"/Users/admin/gt-ft/react-apps/portfolio-serverless/src/components/IconLink/IconLink.jsx",[],"/Users/admin/gt-ft/react-apps/portfolio-serverless/src/components/ProjectCard/ProjectCard.jsx",[],{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","severity":1,"message":"53","line":1,"column":38,"nodeType":"54","messageId":"55","endLine":1,"endColumn":42},{"ruleId":"56","severity":1,"message":"57","line":105,"column":6,"nodeType":"58","endLine":105,"endColumn":8,"suggestions":"59"},{"ruleId":"60","severity":1,"message":"61","line":111,"column":11,"nodeType":"62","endLine":111,"endColumn":73},{"ruleId":"48","replacedBy":"63"},{"ruleId":"50","replacedBy":"64"},"no-native-reassign",["65"],"no-negated-in-lhs",["66"],"no-unused-vars","'lazy' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'lazyAbout', 'lazyProject', and 'lazyTech'. Either include them or remove the dependency array.","ArrayExpression",["67"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["65"],["66"],"no-global-assign","no-unsafe-negation",{"desc":"68","fix":"69"},"Update the dependencies array to be: [lazyAbout, lazyProject, lazyTech]",{"range":"70","text":"71"},[2846,2848],"[lazyAbout, lazyProject, lazyTech]"]
